// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bot.Connector
{
    using Microsoft.Rest;
    
    using Newtonsoft.Json;

    /// <summary>
    /// The Bot State REST API allows your bot to store and retrieve state
    /// associated with conversations conducted through
    /// the [Bot Connector REST API](/en-us/restapi/connector). The Bot State
    /// REST API uses REST and HTTPS to send and receive
    /// encoded content that your bot controls.
    ///
    /// Client libraries for this REST API are available. See below for a list.
    ///
    /// Your bot may store data for a user, a conversation, or a single user
    /// within a conversation (called "private" data).
    /// Each payload may be up to 32 kilobytes in size. The data may be removed
    /// by the bot or upon a user's request, e.g.
    /// if the user requests the channel to inform the bot (and therefore, the
    /// Bot Framework) to delete the user's data.
    ///
    /// The Bot State REST API is only useful in conjunction with the Bot
    /// Connector REST API.
    ///
    /// Authentication for both the Bot State and Bot Connector REST APIs is
    /// accomplished with JWT Bearer tokens, and is
    /// described in detail in the [Connector
    /// Authentication](/en-us/restapi/authentication) document.
    ///
    /// Currently, clients calling the Bot State REST API must send their
    /// requests to the ```state.botframework.com```
    /// host. Channel services do not currently implement the Bot State REST
    /// API.
    ///
    /// Requests to update bot state include an ```eTag``` property within the
    /// JSON payload. You may use the ```eTag```
    /// for optimistic concurrency control. If you include an ```eTag``` value
    /// equivalent to the ```eTag``` you saw
    /// in a prior object, the Bot State REST API will fail the request with an
    /// HTTP 409 or 412 error, on update or create,
    /// respectively. If you wish to overwrite whatever data is in the Bot
    /// State service, set ```eTag``` to ```*```.
    ///
    /// # Client Libraries for the Bot State REST API
    ///
    /// * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)
    /// * [Bot Builder for Node.js](/en-us/node/builder/overview/)
    /// * Generate your own from the [State API Swagger
    /// file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/StateAPI.json)
    ///
    /// Â© 2016 Microsoft
    /// </summary>
    public partial interface IStateClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Gets the IBotState.
        /// </summary>
        IBotState BotState { get; }

    }
}
