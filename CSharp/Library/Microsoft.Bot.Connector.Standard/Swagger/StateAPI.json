{
  "swagger": "2.0",
  "info": {
    "version": "v3",
    "title": "Microsoft Bot Connector API - v3.0",
    "description": "The Bot State REST API allows your bot to store and retrieve state associated with conversations conducted through\r\nthe [Bot Connector REST API](/en-us/restapi/connector). The Bot State REST API uses REST and HTTPS to send and receive\r\nencoded content that your bot controls.\r\n\r\nClient libraries for this REST API are available. See below for a list.\r\n\r\nYour bot may store data for a user, a conversation, or a single user within a conversation (called \"private\" data).\r\nEach payload may be up to 32 kilobytes in size. The data may be removed by the bot or upon a user's request, e.g.\r\nif the user requests the channel to inform the bot (and therefore, the Bot Framework) to delete the user's data.\r\n\r\nThe Bot State REST API is only useful in conjunction with the Bot Connector REST API.\r\n\r\nAuthentication for both the Bot State and Bot Connector REST APIs is accomplished with JWT Bearer tokens, and is\r\ndescribed in detail in the [Connector Authentication](/en-us/restapi/authentication) document.\r\n\r\n# Client Libraries for the Bot State REST API\r\n\r\n* [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)\r\n* [Bot Builder for Node.js](/en-us/node/builder/overview/)\r\n* Generate your own from the [State API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/StateAPI.json)\r\n\r\n© 2016 Microsoft",
    "termsOfService": "https://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx",
    "contact": {
      "name": "Bot Framework",
      "url": "https://botframework.com",
      "email": "botframework@microsoft.com"
    },
    "license": {
      "name": "The MIT License (MIT)",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "state.botframework.com",
  "schemes": [ "https" ],
  "paths": {
    "/v3/botstate/{channelId}/users/{userId}": {
      "get": {
        "tags": [ "BotState" ],
        "summary": "GetUserData",
        "description": "Get a bots data for the user across all conversations",
        "operationId": "BotState_GetUserData",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id for the user on the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "BotState" ],
        "summary": "SetUserData",
        "description": "Update the bot's data for a user",
        "operationId": "BotState_SetUserData",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id for the user on the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "botData",
            "in": "body",
            "description": "the new botdata",
            "required": true,
            "schema": { "$ref": "#/definitions/BotData" }
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by another operation.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [ "BotState" ],
        "summary": "DeleteStateForUser",
        "description": "Delete all data for a user in a channel (UserData and PrivateConversationData)",
        "operationId": "BotState_DeleteStateForUser",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id for the user on the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of IDs",
            "schema": {
              "type": "array",
              "items": { "type": "string" }
            }
          },
          "204": { "description": "The operation succeeded but no content was returned." },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by another operation.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      }
    },
    "/v3/botstate/{channelId}/conversations/{conversationId}": {
      "get": {
        "tags": [ "BotState" ],
        "summary": "GetConversationData",
        "description": "get the bots data for all users in a conversation",
        "operationId": "BotState_GetConversationData",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "the channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "The id for the conversation on the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "BotState" ],
        "summary": "SetConversationData",
        "description": "Update the bot's data for all users in a conversation",
        "operationId": "BotState_SetConversationData",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "The id for the conversation on the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "botData",
            "in": "body",
            "description": "the new botdata",
            "required": true,
            "schema": { "$ref": "#/definitions/BotData" }
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by another operation.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      }
    },
    "/v3/botstate/{channelId}/conversations/{conversationId}/users/{userId}": {
      "get": {
        "tags": [ "BotState" ],
        "summary": "GetPrivateConversationData",
        "description": "get bot's data for a single user in a conversation",
        "operationId": "BotState_GetPrivateConversationData",
        "consumes": [],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "The id for the conversation on the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id for the user on the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "BotState" ],
        "summary": "SetPrivateConversationData",
        "description": "Update the bot's data for a single user in a conversation",
        "operationId": "BotState_SetPrivateConversationData",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "The id for the conversation on the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id for the user on the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "botData",
            "in": "body",
            "description": "the new botdata",
            "required": true,
            "schema": { "$ref": "#/definitions/BotData" }
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "403": { "description": "The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App Password." },
          "404": {
            "description": "The resource was not found.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by another operation.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "An internal server has occurred. Inspect the message for a more detailed description.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "503": {
            "description": "The service you are trying to communciate with is unavailable.",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "BotData": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/Object" },
        "eTag": { "type": "string" }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "ErrorResponse": {
      "type": "object",
      "properties": { "error": { "$ref": "#/definitions/Error" } }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "message": { "type": "string" }
      }
    }
  }
}