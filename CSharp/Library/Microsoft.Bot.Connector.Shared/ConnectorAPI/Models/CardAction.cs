// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Bot.Connector
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// A clickable action
    /// </summary>
    public partial class CardAction
    {
        /// <summary>
        /// Initializes a new instance of the CardAction class.
        /// </summary>
        public CardAction()
        {
            this.Type = ActionTypes.ImBack;
        }

        /// <summary>
        /// Initializes a new instance of the CardAction class.
        /// </summary>
        public CardAction(string type, string title = default(string), string image = default(string), object value = default(object), string text = default(string), string displayText = default(string)) : this()
        {
            Type = type;
            Title = title;
            Image = image;
            Text = text;
            DisplayText = displayText;
            Value = value;
        }

        /// <summary>
        /// The type of action implemented by this button. Defaults to <see cref="ActionTypes.ImBack"/>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Text description which appears on the button
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Image URL which will appear on the button, next to text label
        /// </summary>
        [JsonProperty(PropertyName = "image")]
        public string Image { get; set; }

        /// <summary>
        /// Text for this action
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// (Optional) text to display in the chat feed if the button is
        /// clicked
        /// </summary>
        [JsonProperty(PropertyName = "displayText")]
        public string DisplayText { get; set; }

        /// <summary>
        /// Supplementary parameter for action. Content of this property
        /// depends on the ActionType
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public object Value { get; set; }

    }
}
