<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Sandwich_description;VALUE" xml:space="preserve">
    <value>Sandwich</value>
  </data>
  <data name="Sandwich_valueDescriptions;BLT;VALUE" xml:space="preserve">
    <value>BLT</value>
  </data>
  <data name="Sandwich_valueDescriptions;BlackForestHam;VALUE" xml:space="preserve">
    <value>Black Forest Ham</value>
  </data>
  <data name="Sandwich_valueDescriptions;BuffaloChicken;VALUE" xml:space="preserve">
    <value>Buffalo Chicken</value>
  </data>
  <data name="Sandwich_valueDescriptions;ChickenAndBaconRanchMelt;VALUE" xml:space="preserve">
    <value>Chicken And Bacon Ranch Melt</value>
  </data>
  <data name="Sandwich_valueDescriptions;ColdCutCombo;VALUE" xml:space="preserve">
    <value>Cold Cut Combo</value>
  </data>
  <data name="Sandwich_valueDescriptions;MeatballMarinara;VALUE" xml:space="preserve">
    <value>Meatball Marinara</value>
  </data>
  <data name="Sandwich_valueDescriptions;OvenRoastedChicken;VALUE" xml:space="preserve">
    <value>Oven Roasted Chicken</value>
  </data>
  <data name="Sandwich_valueDescriptions;RoastBeef;VALUE" xml:space="preserve">
    <value>Roast Beef</value>
  </data>
  <data name="Sandwich_valueDescriptions;RotisserieStyleChicken;VALUE" xml:space="preserve">
    <value>Rotisserie Style Chicken</value>
  </data>
  <data name="Sandwich_valueDescriptions;SpicyItalian;VALUE" xml:space="preserve">
    <value>Spicy Italian</value>
  </data>
  <data name="Sandwich_valueDescriptions;SteakAndCheese;VALUE" xml:space="preserve">
    <value>Steak And Cheese</value>
  </data>
  <data name="Sandwich_valueDescriptions;SweetOnionTeriyaki;VALUE" xml:space="preserve">
    <value>Sweet Onion Teriyaki</value>
  </data>
  <data name="Sandwich_valueDescriptions;Tuna;VALUE" xml:space="preserve">
    <value>Tuna</value>
  </data>
  <data name="Sandwich_valueDescriptions;TurkeyBreast;VALUE" xml:space="preserve">
    <value>Turkey Breast</value>
  </data>
  <data name="Sandwich_valueDescriptions;Veggie;VALUE" xml:space="preserve">
    <value>Veggie</value>
  </data>
  <data name="Length_description;VALUE" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="Length_valueDescriptions;SixInch;VALUE" xml:space="preserve">
    <value>Six Inch</value>
  </data>
  <data name="Length_valueDescriptions;FootLong;VALUE" xml:space="preserve">
    <value>Foot Long</value>
  </data>
  <data name="Ingredients.Bread_description;VALUE" xml:space="preserve">
    <value>Bread</value>
  </data>
  <data name="Ingredients.Bread_valueDescriptions;NineGrainWheat;VALUE" xml:space="preserve">
    <value>Nine Grain Wheat</value>
  </data>
  <data name="Ingredients.Bread_valueDescriptions;NineGrainHoneyOat;VALUE" xml:space="preserve">
    <value>Nine Grain Honey Oat</value>
  </data>
  <data name="Ingredients.Bread_valueDescriptions;Italian;VALUE" xml:space="preserve">
    <value>Italian</value>
  </data>
  <data name="Ingredients.Bread_valueDescriptions;ItalianHerbsAndCheese;VALUE" xml:space="preserve">
    <value>Italian Herbs And Cheese</value>
  </data>
  <data name="Ingredients.Bread_valueDescriptions;Flatbread;VALUE" xml:space="preserve">
    <value>Flatbread</value>
  </data>
  <data name="Ingredients.Cheese_description;VALUE" xml:space="preserve">
    <value>Cheese</value>
  </data>
  <data name="Ingredients.Cheese_valueDescriptions;American;VALUE" xml:space="preserve">
    <value>American</value>
  </data>
  <data name="Ingredients.Cheese_valueDescriptions;MontereyCheddar;VALUE" xml:space="preserve">
    <value>Monterey Cheddar</value>
  </data>
  <data name="Ingredients.Cheese_valueDescriptions;Pepperjack;VALUE" xml:space="preserve">
    <value>Pepperjack</value>
  </data>
  <data name="Ingredients.Toppings_description;VALUE" xml:space="preserve">
    <value>Toppings</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Everything;VALUE" xml:space="preserve">
    <value>Everything</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Avocado;VALUE" xml:space="preserve">
    <value>Avocado</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;BananaPeppers;VALUE" xml:space="preserve">
    <value>Banana Peppers</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Cucumbers;VALUE" xml:space="preserve">
    <value>Cucumbers</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;GreenBellPeppers;VALUE" xml:space="preserve">
    <value>Green Bell Peppers</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Jalapenos;VALUE" xml:space="preserve">
    <value>Jalapenos</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Lettuce;VALUE" xml:space="preserve">
    <value>Lettuce</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Olives;VALUE" xml:space="preserve">
    <value>Olives</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Pickles;VALUE" xml:space="preserve">
    <value>Pickles</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;RedOnion;VALUE" xml:space="preserve">
    <value>Red Onion</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Spinach;VALUE" xml:space="preserve">
    <value>Spinach</value>
  </data>
  <data name="Ingredients.Toppings_valueDescriptions;Tomatoes;VALUE" xml:space="preserve">
    <value>Tomatoes</value>
  </data>
  <data name="Ingredients.Sauces_description;VALUE" xml:space="preserve">
    <value>Sauces</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;ChipotleSouthwest;VALUE" xml:space="preserve">
    <value>Chipotle Southwest</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;HoneyMustard;VALUE" xml:space="preserve">
    <value>Honey Mustard</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;LightMayonnaise;VALUE" xml:space="preserve">
    <value>Light Mayonnaise</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;RegularMayonnaise;VALUE" xml:space="preserve">
    <value>Regular Mayonnaise</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;Mustard;VALUE" xml:space="preserve">
    <value>Mustard</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;Oil;VALUE" xml:space="preserve">
    <value>Oil</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;Pepper;VALUE" xml:space="preserve">
    <value>Pepper</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;Ranch;VALUE" xml:space="preserve">
    <value>Ranch</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;SweetOnion;VALUE" xml:space="preserve">
    <value>Sweet Onion</value>
  </data>
  <data name="Ingredients.Sauces_valueDescriptions;Vinegar;VALUE" xml:space="preserve">
    <value>Vinegar</value>
  </data>
  <data name="Specials_description;VALUE" xml:space="preserve">
    <value>Specials</value>
  </data>
  <data name="DeliveryAddress_description;VALUE" xml:space="preserve">
    <value>Delivery Address</value>
  </data>
  <data name="DeliveryTime_description;VALUE" xml:space="preserve">
    <value>Delivery Time</value>
  </data>
  <data name="Rating_description;VALUE" xml:space="preserve">
    <value>your experience today</value>
  </data>
  <data name="message0;LIST" xml:space="preserve">
    <value>Welcome to the sandwich order bot!</value>
  </data>
  <data name="Sandwich_terms;LIST" xml:space="preserve">
    <value>sandwichs?</value>
  </data>
  <data name="Sandwich_valueTerms;BLT;LIST" xml:space="preserve">
    <value>blts?</value>
  </data>
  <data name="Sandwich_valueTerms;BlackForestHam;LIST" xml:space="preserve">
    <value>blacks?;forests?;hams?;blacks? forests?;forests? hams?;blacks? forests? hams?</value>
  </data>
  <data name="Sandwich_valueTerms;BuffaloChicken;LIST" xml:space="preserve">
    <value>buffalos?;chickens?;buffalos? chickens?</value>
  </data>
  <data name="Sandwich_valueTerms;ChickenAndBaconRanchMelt;LIST" xml:space="preserve">
    <value>chickens?;and;bacons?;ranchs?;melts?;chickens? and;and bacons?;bacons? ranchs?;ranchs? melts?;chickens? and bacons?;and bacons? ranchs?;bacons? ranchs? melts?;chicken and bacon ranch melt</value>
  </data>
  <data name="Sandwich_valueTerms;ColdCutCombo;LIST" xml:space="preserve">
    <value>colds?;cuts?;combos?;colds? cuts?;cuts? combos?;colds? cuts? combos?</value>
  </data>
  <data name="Sandwich_valueTerms;MeatballMarinara;LIST" xml:space="preserve">
    <value>meatballs?;marinaras?;meatballs? marinaras?</value>
  </data>
  <data name="Sandwich_valueTerms;OvenRoastedChicken;LIST" xml:space="preserve">
    <value>ovens?;roasteds?;chickens?;ovens? roasteds?;roasteds? chickens?;ovens? roasteds? chickens?</value>
  </data>
  <data name="Sandwich_valueTerms;RoastBeef;LIST" xml:space="preserve">
    <value>roasts?;beefs?;roasts? beefs?</value>
  </data>
  <data name="Sandwich_valueTerms;RotisserieStyleChicken;LIST" xml:space="preserve">
    <value>rotis\w*s?;styles?;chickens?;rotis\w*s? styles?;styles? chickens?;rotis\w*s? styles? chickens?</value>
  </data>
  <data name="Sandwich_valueTerms;SpicyItalian;LIST" xml:space="preserve">
    <value>spicys?;italians?;spicys? italians?</value>
  </data>
  <data name="Sandwich_valueTerms;SteakAndCheese;LIST" xml:space="preserve">
    <value>steaks?;and;cheeses?;steaks? and;and cheeses?;steaks? and cheeses?</value>
  </data>
  <data name="Sandwich_valueTerms;SweetOnionTeriyaki;LIST" xml:space="preserve">
    <value>sweets?;onions?;teriyakis?;sweets? onions?;onions? teriyakis?;sweets? onions? teriyakis?</value>
  </data>
  <data name="Sandwich_valueTerms;Tuna;LIST" xml:space="preserve">
    <value>tunas?</value>
  </data>
  <data name="Sandwich_valueTerms;TurkeyBreast;LIST" xml:space="preserve">
    <value>turkeys?;breasts?;turkeys? breasts?</value>
  </data>
  <data name="Sandwich_valueTerms;Veggie;LIST" xml:space="preserve">
    <value>veggies?</value>
  </data>
  <data name="Sandwich_promptDefinition;LIST" xml:space="preserve">
    <value>What kind of {&amp;} would you like? {||}</value>
  </data>
  <data name="Length_terms;LIST" xml:space="preserve">
    <value>lengths?</value>
  </data>
  <data name="Length_valueTerms;SixInch;LIST" xml:space="preserve">
    <value>six;inchs?;six inchs?</value>
  </data>
  <data name="Length_valueTerms;FootLong;LIST" xml:space="preserve">
    <value>foots?;longs?;foots? longs?</value>
  </data>
  <data name="Length_promptDefinition;LIST" xml:space="preserve">
    <value>What size of sandwich do you want? {||}</value>
  </data>
  <data name="Ingredients.Bread_terms;LIST" xml:space="preserve">
    <value>breads?</value>
  </data>
  <data name="Ingredients.Bread_valueTerms;NineGrainWheat;LIST" xml:space="preserve">
    <value>nine;grains?;wheats?;nine grains?;grains? wheats?;nine grains? wheats?</value>
  </data>
  <data name="Ingredients.Bread_valueTerms;NineGrainHoneyOat;LIST" xml:space="preserve">
    <value>nine;grains?;honeys?;oats?;nine grains?;grains? honeys?;honeys? oats?;nine grains? honeys?;grains? honeys? oats?;nine grain honey oat</value>
  </data>
  <data name="Ingredients.Bread_valueTerms;Italian;LIST" xml:space="preserve">
    <value>italians?</value>
  </data>
  <data name="Ingredients.Bread_valueTerms;ItalianHerbsAndCheese;LIST" xml:space="preserve">
    <value>italians?;herbs?;and;cheeses?;italians? herbs?;herbs? and;and cheeses?;italians? herbs? and;herbs? and cheeses?;italian herbs and cheese</value>
  </data>
  <data name="Ingredients.Bread_valueTerms;Flatbread;LIST" xml:space="preserve">
    <value>flatbreads?</value>
  </data>
  <data name="Ingredients.Cheese_terms;LIST" xml:space="preserve">
    <value>cheeses?</value>
  </data>
  <data name="Ingredients.Cheese_valueTerms;American;LIST" xml:space="preserve">
    <value>americans?</value>
  </data>
  <data name="Ingredients.Cheese_valueTerms;MontereyCheddar;LIST" xml:space="preserve">
    <value>montereys?;cheddars?;montereys? cheddars?</value>
  </data>
  <data name="Ingredients.Cheese_valueTerms;Pepperjack;LIST" xml:space="preserve">
    <value>pepperjacks?</value>
  </data>
  <data name="Ingredients.Toppings_terms;LIST" xml:space="preserve">
    <value>toppings?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Everything;LIST" xml:space="preserve">
    <value>except;but;not;no;all;everything</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Avocado;LIST" xml:space="preserve">
    <value>avocados?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;BananaPeppers;LIST" xml:space="preserve">
    <value>bananas?;peppers?;bananas? peppers?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Cucumbers;LIST" xml:space="preserve">
    <value>cucumbers?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;GreenBellPeppers;LIST" xml:space="preserve">
    <value>greens?;bells?;peppers?;greens? bells?;bells? peppers?;greens? bells? peppers?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Jalapenos;LIST" xml:space="preserve">
    <value>jalapenos?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Lettuce;LIST" xml:space="preserve">
    <value>lettuces?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Olives;LIST" xml:space="preserve">
    <value>olives?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Pickles;LIST" xml:space="preserve">
    <value>pickles?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;RedOnion;LIST" xml:space="preserve">
    <value>reds?;onions?;reds? onions?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Spinach;LIST" xml:space="preserve">
    <value>spinachs?</value>
  </data>
  <data name="Ingredients.Toppings_valueTerms;Tomatoes;LIST" xml:space="preserve">
    <value>tomatoes?</value>
  </data>
  <data name="message6;LIST" xml:space="preserve">
    <value>For sandwich toppings you have selected {Ingredients.Toppings}.</value>
  </data>
  <data name="Ingredients.Sauces_terms;LIST" xml:space="preserve">
    <value>sauces?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;ChipotleSouthwest;LIST" xml:space="preserve">
    <value>chipotles?;southwests?;chipotles? southwests?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;HoneyMustard;LIST" xml:space="preserve">
    <value>honeys?;mustards?;honeys? mustards?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;LightMayonnaise;LIST" xml:space="preserve">
    <value>lights?;mayonnaises?;lights? mayonnaises?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;RegularMayonnaise;LIST" xml:space="preserve">
    <value>regulars?;mayonnaises?;regulars? mayonnaises?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;Mustard;LIST" xml:space="preserve">
    <value>mustards?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;Oil;LIST" xml:space="preserve">
    <value>oils?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;Pepper;LIST" xml:space="preserve">
    <value>peppers?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;Ranch;LIST" xml:space="preserve">
    <value>ranchs?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;SweetOnion;LIST" xml:space="preserve">
    <value>sweets?;onions?;sweets? onions?</value>
  </data>
  <data name="Ingredients.Sauces_valueTerms;Vinegar;LIST" xml:space="preserve">
    <value>vinegars?</value>
  </data>
  <data name="Specials_terms;LIST" xml:space="preserve">
    <value>specials?</value>
  </data>
  <data name="DeliveryAddress_terms;LIST" xml:space="preserve">
    <value>deliverys?;address?;deliverys? address?</value>
  </data>
  <data name="DeliveryTime_terms;LIST" xml:space="preserve">
    <value>deliverys?;times?;deliverys? times?</value>
  </data>
  <data name="DeliveryTime_promptDefinition;LIST" xml:space="preserve">
    <value>What time do you want your sandwich delivered? {||}</value>
  </data>
  <data name="confirmation12_promptDefinition;LIST" xml:space="preserve">
    <value>Do you want to order your {Length} {Sandwich} on {Ingredients.Bread} {&amp;Ingredients.Bread} with {[{Ingredients.Cheese} {Ingredients.Toppings} {Ingredients.Sauces}]} to be sent to {DeliveryAddress} {?at {DeliveryTime:t}}?</value>
  </data>
  <data name="Rating_terms;LIST" xml:space="preserve">
    <value>ratings?</value>
  </data>
  <data name="message14;LIST" xml:space="preserve">
    <value>Thanks for ordering a sandwich!</value>
  </data>
  <data name="NotUnderstood;Sandwich;Length;Ingredients.Bread;Ingredients.Cheese;Ingredients.Toppings;Ingredients.Sauces;Specials;DeliveryAddress;DeliveryTime;Rating;TEMPLATE" xml:space="preserve">
    <value>I do not understand "{0}".;Try again, I don't get "{0}".</value>
  </data>
  <data name="EnumSelectOne;Sandwich;Length;Ingredients.Bread;Ingredients.Cheese;Ingredients.Toppings;Ingredients.Sauces;Specials;DeliveryAddress;DeliveryTime;Rating;TEMPLATE" xml:space="preserve">
    <value>What kind of {&amp;} would you like on your sandwich? {||}</value>
  </data>
  <data name="NoPreference;Specials;TEMPLATE" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="StatusFormat;DeliveryTime;TEMPLATE" xml:space="preserve">
    <value>{&amp;}: {:t}</value>
  </data>
</root>