// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Bot.Connector.Payments
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    

    /// <summary>
    /// Address within a Payment Request
    /// </summary>
    public partial class PaymentAddress
    {
        /// <summary>
        /// Initializes a new instance of the PaymentAddress class.
        /// </summary>
        public PaymentAddress() { }

        /// <summary>
        /// Initializes a new instance of the PaymentAddress class.
        /// </summary>
        public PaymentAddress(string country = default(string), IList<string> addressLine = default(IList<string>), string region = default(string), string city = default(string), string dependentLocality = default(string), string postalCode = default(string), string sortingCode = default(string), string languageCode = default(string), string organization = default(string), string recipient = default(string), string phone = default(string))
        {
            Country = country;
            AddressLine = addressLine;
            Region = region;
            City = city;
            DependentLocality = dependentLocality;
            PostalCode = postalCode;
            SortingCode = sortingCode;
            LanguageCode = languageCode;
            Organization = organization;
            Recipient = recipient;
            Phone = phone;
        }

        /// <summary>
        /// This is the CLDR (Common Locale Data Repository) region code. For
        /// example, US, GB, CN, or JP
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// This is the most specific part of the address. It can include, for
        /// example, a street name, a house number, apartment number, a rural
        /// delivery route, descriptive instructions, or a post office box
        /// number.
        /// </summary>
        [JsonProperty(PropertyName = "addressLine")]
        public IList<string> AddressLine { get; set; }

        /// <summary>
        /// This is the top level administrative subdivision of the country.
        /// For example, this can be a state, a province, an oblast, or a
        /// prefecture.
        /// </summary>
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }

        /// <summary>
        /// This is the city/town portion of the address.
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// This is the dependent locality or sublocality within a city. For
        /// example, used for neighborhoods, boroughs, districts, or UK
        /// dependent localities.
        /// </summary>
        [JsonProperty(PropertyName = "dependentLocality")]
        public string DependentLocality { get; set; }

        /// <summary>
        /// This is the postal code or ZIP code, also known as PIN code in
        /// India.
        /// </summary>
        [JsonProperty(PropertyName = "postalCode")]
        public string PostalCode { get; set; }

        /// <summary>
        /// This is the sorting code as used in, for example, France.
        /// </summary>
        [JsonProperty(PropertyName = "sortingCode")]
        public string SortingCode { get; set; }

        /// <summary>
        /// This is the BCP-47 language code for the address. It's used to
        /// determine the field separators and the order of fields when
        /// formatting the address for display.
        /// </summary>
        [JsonProperty(PropertyName = "languageCode")]
        public string LanguageCode { get; set; }

        /// <summary>
        /// This is the organization, firm, company, or institution at this
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "organization")]
        public string Organization { get; set; }

        /// <summary>
        /// This is the name of the recipient or contact person.
        /// </summary>
        [JsonProperty(PropertyName = "recipient")]
        public string Recipient { get; set; }

        /// <summary>
        /// This is the phone number of the recipient or contact person.
        /// </summary>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

    }
}
